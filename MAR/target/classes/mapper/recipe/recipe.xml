<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mar.recipe">

	<!-- com.sist.mar.recipe. + 메소드 이름 -> 메소드 특정가능 -->
	
	<!-- doInsert -->
	<insert id="doInsert" parameterType="RecipeVO">
		INSERT INTO recipe (
		    recipe_no,
		    reg_id,
		    title,
		    contents,
		    read_cnt,
		    ingredients,
		    url_addr,
		    reg_dt,
		    mod_dt
		) VALUES (
		    RECIPE_SEQ.nextval,
		    #{regId},
		    #{title},
		    #{contents},
		    0,
		    #{ingredients},
		    #{urlAddr},
		    SYSDATE,
		    NULL
		)	
	</insert>
	
	<!-- doDelete -->
	<delete id="doDelete" parameterType="RecipeVO">
		DELETE FROM recipe
		WHERE recipe_no = #{recipeNo}	
	</delete>
	
	<!-- doUpdate -->
	<update id="doUpdate" parameterType="RecipeVO">
		UPDATE recipe
		SET
		    title = #{title},
			contents = #{contents},
			ingredients = #{ingredients},
			url_addr = #{urlAddr},
			mod_dt = SYSDATE
		WHERE recipe_no = #{recipeNo}	
	</update>
	
	<!-- doSelectOne -->
	<select id="doSelectOne" parameterType="RecipeVO" resultType="RecipeVO">
		SELECT
		    recipe_no AS recipeNo,
		    reg_id AS regId,
		    title AS title,
		    contents AS contents,
		    read_cnt AS readCnt,
		    ingredients AS ingredients,
		    url_addr AS urlAddr,
		    reg_dt AS regDt,
		    mod_dt AS modDt
		FROM recipe
		WHERE recipe_no = #{recipeNo}		
	</select>
	
	<!-- doCountReadCnt -->
	<update id="doCountReadCnt" parameterType="RecipeVO">
		UPDATE recipe
		SET read_cnt = read_cnt + 1
		WHERE recipe_no = #{recipeNo}	
	</update>
	
	<!-- doRetrieveRelevantItem -->
	<select id="doRetrieveRelevantItem" parameterType="RecipeVO" resultType="SimpleItemVO">
		DECLARE
		    SimpleItemNo item.item_no%TYPE;
		    SimpleItemName item.name%TYPE;
			SimpleItemPrice item.price%TYPE;
			SimpleItemImageNo image.image_no%TYPE;
			SimpleItemImagePath image.path%TYPE;
			SimpleItemImageName image.save_name%TYPE;
		    total_ingredient_cnt NUMBER := 0;
		  
		BEGIN
		
			SELECT COUNT(
					TRIM(
						REGEXP_SUBSTR(t0.ingredients,'[^,]+', 1, LEVEL)
					)
				)
			INTO total_ingredient_cnt
			FROM
			(	
				SELECT ingredients
				FROM recipe
				WHERE recipe_no = #{recipeNo}
			)t0
			CONNECT BY REGEXP_SUBSTR(ingredients, '[^,]+', 1, LEVEL) IS NOT NULL;
		    
			WHILE(total_ingredient_cnt > 0) 
			LOOP
				BEGIN
					SELECT t3.item_no, t3.name, t3.price, t4.image_no, t4.path, t4.save_name 
					INTO SimpleItemNo, SimpleItemName, SimpleItemPrice, SimpleItemImageNo, SimpleItemImagePath, SimpleItemImageName
					FROM(
						SELECT t2.item_no, t2.name, t2.price
						FROM(
							SELECT item_no, name, sales, price
							FROM item
							WHERE name like 
							'%' || 
							(
								SELECT t1.ingredients
								FROM(
									SELECT ROWNUM rnum,
										TRIM(
											REGEXP_SUBSTR(t0.ingredients,'[^,]+', 1, LEVEL)
										) AS ingredients 
									FROM
									(	
										SELECT ingredients
										FROM recipe
										WHERE recipe_no = #{recipeNo}
									)t0
									CONNECT BY REGEXP_SUBSTR(ingredients, '[^,]+', 1, LEVEL) IS NOT NULL					
								)t1
								WHERE t1.rnum = total_ingredient_cnt
							)
							|| '%'
							
							ORDER BY sales DESC
						)t2
						WHERE ROWNUM = 1
					)t3, image t4
					WHERE t3.item_no = t4.from_no
					AND t4.main_image = 1
					
					;
					total_ingredient_cnt := total_ingredient_cnt - 1;
				
				EXCEPTION
					WHEN NO_DATA_FOUND THEN
		                total_ingredient_cnt := total_ingredient_cnt - 1;
		                CONTINUE;
				END;
				
			END LOOP;
			
		END;	
	</select>
	
	
</mapper>